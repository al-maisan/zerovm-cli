#!/usr/bin/python
import os
import pty
import sys
from zvsh import ZvArgs, DebugArgs, ZvShell, ZvRunner, ZvConfig

zvsh_args = ZvArgs()
zvsh_args.parse(sys.argv[1:])
zvsh_config = [os.path.abspath('zvsh.cfg'), os.path.expanduser('~/.zvsh.cfg'), '/etc/zvsh.cfg']
config = ZvConfig()
config.read(zvsh_config)
if 'gdb' == zvsh_args.args.command:
    # user wants to debug the program
    zvsh_args = DebugArgs()
    zvsh_args.parse(sys.argv[1:])
    zvshell = ZvShell(config)
    zvshell.config['manifest']['Timeout'] = 60 * 60 * 24 * 30  # a month until debug session will time out
    manifest_file = zvshell.add_arguments(zvsh_args.args)
    zvm_run = ['zerovm-dbg', '-sPQ', manifest_file]
    command_line = ['x86_64-nacl-gdb', '--command=%s' % zvshell.add_debug_script()]
    command_line.extend(zvsh_args.args.gdb_args)
    command_line.append('--args')
    command_line.extend(zvm_run)
    print ' '.join(command_line)
    try:
        pty.spawn(command_line)
    except (KeyboardInterrupt, Exception):
        pass
    finally:
        zvshell.cleanup()
else:
    zvshell = ZvShell(config)
    manifest_file = zvshell.add_arguments(zvsh_args.args)
    zvm_run = ['zerovm', '-PQ']
    if zvsh_args.args.zvm_trace:
        trace_log = os.path.abspath('zvsh.trace.log')
        zvm_run.extend(['-T', trace_log])
    zvm_run.append(manifest_file)
    runner = ZvRunner(zvm_run, zvshell.stdout, zvshell.stderr, zvshell.tmpdir)
    try:
        runner.run()
    finally:
        zvshell.cleanup()
